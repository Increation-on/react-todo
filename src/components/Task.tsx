/**
 * –ö–û–ú–ü–û–ù–ï–ù–¢: Task (–≠–ª–µ–º–µ–Ω—Ç –∑–∞–¥–∞—á–∏)
 * –û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å: –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ–¥–Ω–æ–π –∑–∞–¥–∞—á–∏, –¥–µ–ª–µ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏–π
 * –ü–∞—Ç—Ç–µ—Ä–Ω: Presentational Component / Dumb Component
 */
import React from "react"

interface Task {
    id: number | string,
    text: string,
    completed: boolean
}

interface TaskProps {
    task: Task;
    onToggle: (id: number | string) => void;  // –¢–µ–ø–µ—Ä—å –ø—Ä–∏–Ω–∏–º–∞–µ—Ç ID!
    onDelete: (id: number | string) => void;  // –¢–µ–ø–µ—Ä—å –ø—Ä–∏–Ω–∏–º–∞–µ—Ç ID!             
}

const Task = React.memo(({ task, onToggle, onDelete }: TaskProps) => {
    // ‚úÖ PROPS: –î–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü–∏—è –ø—Ä–æ–ø—Å–æ–≤ –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞ –¥–æ—Å—Ç—É–ø–∞
    // task - –¥–∞–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏, onToggle/onDelete - callback —Ñ—É–Ω–∫—Ü–∏–∏
    return (
        <li className="task">
            {/* ‚úÖ UI: –¢–µ–∫—Å—Ç –∑–∞–¥–∞—á–∏ —Å —É—Å–ª–æ–≤–Ω—ã–º —Å—Ç–∏–ª–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è */}
            <span className={task.completed ? 'completed' : ''}>
                {task.text}
            </span>

            {/* ‚úÖ UI: –ß–µ–∫–±–æ–∫—Å –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è */}
            <input
                type="checkbox"
                checked={task.completed}
                onChange={() => onToggle(task.id)}  // üéØ EVENT: –ü–µ—Ä–µ–¥–∞–µ–º –∑–∞–¥–∞—á—É –≤ –∫–æ–ª–±—ç–∫
            />

            {/* ‚úÖ UI: –ö–Ω–æ–ø–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –∑–∞–¥–∞—á–∏ */}
            <button onClick={
                () => onDelete(task.id)} // üéØ EVENT: –ü–µ—Ä–µ–¥–∞–µ–º –∑–∞–¥–∞—á—É –≤ –∫–æ–ª–±—ç–∫
            >
                Delete
            </button>
        </li>
    )
})

export default Task